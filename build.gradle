buildscript {
  repositories {
    jcenter()
    maven {
      name = "forge"
      url = "http://files.minecraftforge.net/maven"
    }
  }
  dependencies {
    classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
  }
}

apply plugin: "net.minecraftforge.gradle.forge"

def mod_file = getModFile("net.gegy1000.terrarium.Terrarium")
version = getModField("VERSION", mod_file)
group = "net.gegy1000"
archivesBaseName = "terrarium"
sourceCompatibility = targetCompatibility = "1.8"

minecraft {
  version = "1.12.2-14.23.4.2729"
  runDir = "minecraft"
  mappings = "stable_39"
}

repositories {
  mavenCentral()
  jcenter()
  maven {
    url = "http://mvn.topobyte.de"
  }
  maven {
    url = "https://maven.gegy1000.net"
  }
  maven {
    url = "https://oss.sonatype.org/content/repositories/public/"
  }
  maven {
    url = "https://repo.spongepowered.org/maven/"
  }
}

configurations {
  embed
  compile.extendsFrom(embed)
}

dependencies {
  deobfCompile 'io.github.opencubicchunks:cubicchunks-api:1.12.2-0.0-SNAPSHOT'
  deobfCompile 'io.github.opencubicchunks:cubicchunks:1.12.2-0.0-SNAPSHOT'
  embed 'net.gegy1000:cubic-glue:0.3.0-SNAPSHOT'
  embed('de.topobyte:osm4j-core-mc:0.1.0') {
    exclude group: 'it.unimi.dsi', module: 'fastutil'
    exclude group: 'org.apache.commons'
    exclude group: 'org.apache.logging.log4j'
  }
  embed('de.topobyte:osm4j-utils-mc:0.1.2') {
    exclude group: 'it.unimi.dsi', module: 'fastutil'
    exclude group: 'org.apache.commons'
    exclude group: 'commons-cli'
    exclude group: 'com.google.protobuf'
    exclude group: 'com.google.guava'
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    exclude group: 'net.sf.trove4j'
  }
  embed 'org.tukaani:xz-fork:1.8'
}

jar {
  from configurations.embed.collect {
    exclude 'META-INF/'
    it.isDirectory() ? it : zipTree(it)
  }
  manifest {
    attributes "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}"
    attributes "Timestamp": System.currentTimeMillis()
  }
}

processResources {
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version

  from(sourceSets.main.resources.srcDirs) {
    include "mcmod.info"
    expand "version": project.version, "mcversion": project.minecraft.version
  }

  from(sourceSets.main.resources.srcDirs) {
    exclude "mcmod.info"
  }
}

String getModFile(String fq_name) {
  return "src/main/java/${fq_name.replace('.', '/')}.java"
}

String getModField(String type, String mod_file) {
  if (mod_file.length() == 0) {
    return ""
  }
  String field = ""
  String prefix = "public static final String $type = \""
  File file = file(mod_file)
  file.eachLine { String s ->
    s = s.trim()
    if (s.startsWith(prefix)) {
      s = s.substring(prefix.length(), s.length() - 2)
      field = s
    }
  }
  return field
}
